<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:regexes.yaml</value>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>

    <!--定义使用c3p0连接池数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 指定连接数据库的JDBC驱动 -->
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <!-- 连接数据库所用的URL -->
        <property name="jdbcUrl" value="${jdbc.url}" />
        <!-- 连接数据库的用户名 -->
        <property name="user" value="${jdbc.username}" />
        <!-- 连接数据库的密码 -->
        <property name="password" value="${jdbc.password}" />
        <!-- 设置数据库连接池的最大连接数 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <!-- 设置数据库连接池的最大缓存 -->
        <property name="maxStatements" value="${jdbc.maxStatements}" />
        <!-- 设置数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <!-- 设置数据库连接池的初始化连接数 -->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
        <!-- 设置数据库连接池的连接的最大空闲时间，单位为秒 -->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}" />

    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!--spring redis configure-->

    <!-- scan Bean -->
    <context:component-scan base-package="com.microquation.linkedme">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}" />
        <property name="port" value="${redis.port}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    <bean id ="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connectionFactory-ref="jedisConnectionFactory" />

    <!--redis operation-->
    <bean id="redisDao" class="com.microquation.linkedme.dao.impl.LMRedisDaoImpl">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    <bean id="redisService" class="com.microquation.linkedme.service.impl.LMRedisServiceImpl">
        <property name="lmRedisDao" ref="redisDao" />
    </bean>


    <!--application-->
    <bean id="applicationDao" class="com.microquation.linkedme.dao.impl.LMApplicationDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="applicationService" class="com.microquation.linkedme.service.impl.LMApplicationServiceImpl">
        <property name="addApplicationDao" ref="applicationDao"/>
    </bean>

    <!--application cache-->
    <bean id="applicationCache" class="com.microquation.linkedme.cache.LMApplicationCache" init-method="init">
        <property name="applicationService" ref="applicationService"/>
    </bean>

    <!--register install-->
    <bean id="clientInstallDao" class="com.microquation.linkedme.dao.impl.LMClientInstallDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="clientInstallService" class="com.microquation.linkedme.service.impl.LMClientInstallServiceImpl">
        <property name="lmClientInstallDao" ref="clientInstallDao"/>
    </bean>

    <!--client install-->
    <bean id="clientOpenDao" class="com.microquation.linkedme.dao.impl.LMClientOpenDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="clientOpenService" class="com.microquation.linkedme.service.impl.LMClientOpenServiceImpl">
        <property name="lmRegisterOpenDao" ref="clientOpenDao"/>
    </bean>

    <!--link-->
    <bean id="linkDao" class="com.microquation.linkedme.dao.impl.LMLinkDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="linkService" class="com.microquation.linkedme.service.impl.LMLinkServiceImpl">
        <property name="lmLinkDao" ref="linkDao"/>
    </bean>




    <!-- regex yaml-->
    <bean id="parser" class="com.microquation.linkedme.utils.useragent.Parser" >
    </bean>


</beans>